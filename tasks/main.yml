---
- debug:
    var: ansible_facts

- name: Setup storage
  include_tasks: setup_storage.yml

- name: Disable SELinux
  selinux:
    policy: targeted
    state: permissive

- name: Setting up IBM Spectrum Protect Server FQDN
  set_fact:
    isp_fqdn: "{{ ansible_nodename }}"
  when: isp_fqdn is undefined

- name: Using the following IBM Spectrum Protect Server FQDN
  debug:
    msg: "IBM Spectrum Protect Server FQDN: {{ isp_fqdn }}"

- name: Show IBM Spectrum Protect Server URL
  debug:
    msg: "IBM Spectrum Protect Server URL: {{ isp_download_url }}"

- name: Make sure temporary installation directory exists
  file:
    state: directory
    path: "{{ isp_installer_local_dir }}"
    mode: '0770'

#- name: Download IBM Spectrum Protect Server
#  get_url:
#    url: "{{ isp_download_url }}"
#    dest: "{{ isp_installer_local_path }}"
#    mode: "0554"

- name: Install required dependencies
  package:
    name:
      - ksh
      - libnsl
      - sysstat
      - libaio
      - libstdc++-devel.i686
      - libstdc++-devel.x86_64
      - numactl-libs

- name: Extact IBM Spectrum Protect Server installer files
  shell:
    cmd: "./{{ isp_installer_filename }}"
    chdir: "{{ isp_installer_local_dir }}"
    creates: "{{ isp_installer_local_dir }}/install.sh"

- name: Find IBM Installation Manager agent files
  find:
    paths: "{{ isp_installer_local_dir }}/im64/Offerings"
    patterns: 'com.ibm.cic.agent_*[0-9].jar'
  register: find_output

- name: Detect IBM Installation Manager version
  set_fact:
    imm_version: "{{ find_output.files[0].path | regex_replace('.*/com.ibm.cic.agent_([0-9_.]+)*[.].*', '\\1') }}"

- name: Show IBM Installation Manager version
  debug:
    msg: "IBM Installation Manager version: {{ imm_version }}"

- template:
    src: "{{ isp_response_file }}.j2"
    dest: "{{ isp_installer_local_dir }}/{{ isp_response_file }}"

- name: Install IBM Spectrum Protect Server
  shell:
    cmd: "./install.sh -s -input {{ isp_response_file }} -acceptLicense -vmargs '-DBYPASS_TSM_REQ_CHECKS=true'"
    chdir: "{{ isp_installer_local_dir }}"
    creates: "{{ isp_dir }}"

- name: Firewall - open IBM Spectrum Protect Server port
  firewalld:
    port: "{{ isp_port }}/tcp"
    zone: public
    permanent: yes
    immediate: yes
    state: enabled

- name: Firewall - open IBM Spectrum Protect Server port (SSL)
  firewalld:
    port: "{{ isp_port_ssl }}/tcp"
    zone: public
    permanent: yes
    immediate: yes
    state: enabled

- name: Make sure numad service is stopped and disabled
  service:
    name: numad
    daemon-reload: yes
    state: stopped
    enabled: false
  when: ansible_facts.services['numad.service'] is defined

- name: Ensure group {{ isp_group }} exists
  group:
    name: "{{ isp_group }}"
    state: present

- name: Ensure user {{ isp_user }} exists
  user:
    name: "{{ isp_user }}"
    uid: "{{ isp_uid }}"
    comment: "IBM Spectrum Protect user"
    groups: "{{ isp_group }}"
    state: present

- name: Set user limits for {{ isp_user }}
  pam_limits:
    domain: "{{ isp_user }}"
    limit_type: '-'
    limit_item: "{{ item.limit_item }}"
    value: "{{ item.value }}"
    dest: "{{ isp_limits_file }}"
  loop:
    - { limit_item: core,   value: "unlimited", description: "core files" }
    - { limit_item: data,   value: "unlimited", description: "max size of data segment" }
    - { limit_item: fsize,  value: "unlimited", description: "max file size" }
    - { limit_item: nofile, value: "65536",     description: "max no. of opened files" }
    - { limit_item: cpu,    value: "unlimited", description: "max amount of processor time" }
    - { limit_item: nproc,  value: "16384",     description: "max no. of user processes" }