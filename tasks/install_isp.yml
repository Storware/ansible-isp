---
- name: Show IBM Spectrum Protect Server URL
  debug:
    msg: "IBM Spectrum Protect Server URL: {{ isp_server_download_url }}"

- name: Make sure temporary installation directory exists
  file:
    state: directory
    path: "{{ isp_server_installer_local_dir }}"
    mode: '0770'

- name: Download IBM Spectrum Protect Server
  get_url:
    url: "{{ isp_server_download_url }}"
    dest: "{{ isp_server_installer_local_path }}"
    mode: "0554"

- name: Install required dependencies
  package:
    name:
      - ksh
      - libnsl
      - libaio
      - libstdc++-devel.i686
      - libstdc++-devel.x86_64
      - numactl-libs

- name: Extact IBM Spectrum Protect Server installer files
  shell:
    cmd: "./{{ isp_server_installer_filename }}"
    chdir: "{{ isp_server_installer_local_dir }}"
    creates: "{{ isp_server_installer_local_dir }}/install.sh"

- name: Find IBM Installation Manager agent files
  find:
    paths: "{{ isp_server_installer_local_dir }}/im64/Offerings"
    patterns: 'com.ibm.cic.agent_*[0-9].jar'
  register: find_output

- name: Detect IBM Installation Manager version
  set_fact:
    imm_version: "{{ find_output.files[0].path | regex_replace('.*/com.ibm.cic.agent_([0-9_.]+)*[.].*', '\\1') }}"

- name: Show IBM Installation Manager version
  debug:
    msg: "IBM Installation Manager version: {{ imm_version }}"

- name: Prepare IBM Spectrum Protect Server installer response file
  template:
    src: "{{ isp_server_response_file }}.j2"
    dest: "{{ isp_server_installer_local_dir }}/{{ isp_server_response_file }}"

- name: Install IBM Spectrum Protect Server
  shell:
    cmd: "./install.sh -s -input {{ isp_server_response_file }} -acceptLicense -vmargs '-DBYPASS_TSM_REQ_CHECKS=true'"
    chdir: "{{ isp_server_installer_local_dir }}"
    creates: "{{ isp_dir }}"

- name: Check if DB2 instance exists
  shell:
    cmd: "{{ db2ilist_bin }}"
  register: db2ilist_output
  changed_when: false

- name: Initialize DB2 instance
  shell:
    cmd: "{{ db2icrt_bin }} -a server -u {{ isp_user }} {{ isp_user }}"
  when: isp_user not in db2ilist_output.stdout

- name: Fetch DB manager config
  become: yes
  become_user: "{{ isp_user }}"
  shell:
    cmd: "source ~/.bashrc && db2 get dbm cfg"
  register: db2_get_dbm_cfg_output
  changed_when: false

- name: Show config
  debug:
    var: db2_get_dbm_cfg_output.stdout_lines

- name: Extract default database path
  set_fact:
    db2_dftdbpath: "{{ db2_get_dbm_cfg_output.stdout_lines | select('match','.*\\(DFTDBPATH\\).*') | map('regex_replace','^.*\\s+=\\s+(.*)','\\1') | first }}"

- name: Show default database path
  debug:
    var: db2_dftdbpath

- name: Update default database path to IBM Spectrum Protect instance path
  become: yes
  become_user: "{{ isp_user }}"
  shell:
    cmd: "source ~/.bashrc && db2 update dbm cfg using dftdbpath '{{ isp_instance_path }}'"
  register: db2_get_dbm_cfg_output
  when: db2_dftdbpath != isp_instance_path